// <auto-generated />
using System;
using Infraestructura.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructura.Datos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Model.Aula", b =>
                {
                    b.Property<int>("idAula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAula"), 1L, 1);

                    b.Property<int>("idInstitucion")
                        .HasColumnType("int");

                    b.Property<int>("numeroAula")
                        .HasColumnType("int");

                    b.Property<int>("pabellon")
                        .HasColumnType("int");

                    b.Property<int>("piso")
                        .HasColumnType("int");

                    b.HasKey("idAula");

                    b.HasIndex("idInstitucion");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("Core.Model.Departamento", b =>
                {
                    b.Property<int>("idDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDepartamento"), 1L, 1);

                    b.Property<int>("idPais")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idDepartamento");

                    b.HasIndex("idPais");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("Core.Model.Distrito", b =>
                {
                    b.Property<int>("idDistrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDistrito"), 1L, 1);

                    b.Property<int>("idProvincia")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idDistrito");

                    b.HasIndex("idProvincia");

                    b.ToTable("Distrito");
                });

            modelBuilder.Entity("Core.Model.Institucion", b =>
                {
                    b.Property<int>("idInstitucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idInstitucion"), 1L, 1);

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("idDistrito")
                        .HasColumnType("int");

                    b.Property<double>("latitud")
                        .HasColumnType("float");

                    b.Property<double>("longitud")
                        .HasColumnType("float");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("referencia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("idInstitucion");

                    b.HasIndex("idDistrito");

                    b.ToTable("Institucion");
                });

            modelBuilder.Entity("Core.Model.Mesa", b =>
                {
                    b.Property<int>("idMesa")
                        .HasColumnType("int");

                    b.Property<int>("idAula")
                        .HasColumnType("int");

                    b.Property<int>("idProcesoElectoral")
                        .HasColumnType("int");

                    b.Property<string>("numeroMesa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("idMesa");

                    b.HasIndex("idProcesoElectoral");

                    b.ToTable("Mesa");
                });

            modelBuilder.Entity("Core.Model.Pais", b =>
                {
                    b.Property<int>("idPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPais"), 1L, 1);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idPais");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Core.Model.PartidoPolitico", b =>
                {
                    b.Property<int>("idPartidoPolitico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPartidoPolitico"), 1L, 1);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("idPartidoPolitico");

                    b.ToTable("PartidoPolitico");
                });

            modelBuilder.Entity("Core.Model.Persona", b =>
                {
                    b.Property<int>("idPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPersona"), 1L, 1);

                    b.Property<string>("apellidoMaterno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("idDistrito")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idPersona");

                    b.HasIndex("idDistrito");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Core.Model.Personero", b =>
                {
                    b.Property<int>("idPersonero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPersonero"), 1L, 1);

                    b.Property<int>("cantidadVotosBlancos")
                        .HasColumnType("int");

                    b.Property<int>("cantidadVotosNulos")
                        .HasColumnType("int");

                    b.Property<int>("cantidadVotosOtros")
                        .HasColumnType("int");

                    b.Property<int>("cantidadVotosPartido")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("idMesa")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idPersonero");

                    b.HasIndex("idMesa");

                    b.HasIndex("idUsuario");

                    b.ToTable("Personero");
                });

            modelBuilder.Entity("Core.Model.ProcesoElectoral", b =>
                {
                    b.Property<int>("idProcesoElectoral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProcesoElectoral"), 1L, 1);

                    b.Property<int>("anio")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idProcesoElectoral");

                    b.ToTable("ProcesoElectoral");
                });

            modelBuilder.Entity("Core.Model.Provincia", b =>
                {
                    b.Property<int>("idProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProvincia"), 1L, 1);

                    b.Property<int>("idDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idProvincia");

                    b.HasIndex("idDepartamento");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("Core.Model.TipoUsuario", b =>
                {
                    b.Property<int>("idTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTipoUsuario"), 1L, 1);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idTipoUsuario");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("Core.Model.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"), 1L, 1);

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("idPartidoPolitico")
                        .HasColumnType("int");

                    b.Property<int>("idPersona")
                        .HasColumnType("int");

                    b.Property<int>("idTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("idUsuario");

                    b.HasIndex("idPartidoPolitico");

                    b.HasIndex("idPersona");

                    b.HasIndex("idTipoUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Core.Model.Aula", b =>
                {
                    b.HasOne("Core.Model.Institucion", "institucion")
                        .WithMany()
                        .HasForeignKey("idInstitucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("institucion");
                });

            modelBuilder.Entity("Core.Model.Departamento", b =>
                {
                    b.HasOne("Core.Model.Pais", "pais")
                        .WithMany()
                        .HasForeignKey("idPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pais");
                });

            modelBuilder.Entity("Core.Model.Distrito", b =>
                {
                    b.HasOne("Core.Model.Provincia", "provincia")
                        .WithMany()
                        .HasForeignKey("idProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("provincia");
                });

            modelBuilder.Entity("Core.Model.Institucion", b =>
                {
                    b.HasOne("Core.Model.Distrito", "distrito")
                        .WithMany()
                        .HasForeignKey("idDistrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("distrito");
                });

            modelBuilder.Entity("Core.Model.Mesa", b =>
                {
                    b.HasOne("Core.Model.Aula", "aula")
                        .WithMany()
                        .HasForeignKey("idMesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.ProcesoElectoral", "procesoElectoral")
                        .WithMany()
                        .HasForeignKey("idProcesoElectoral")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aula");

                    b.Navigation("procesoElectoral");
                });

            modelBuilder.Entity("Core.Model.Persona", b =>
                {
                    b.HasOne("Core.Model.Distrito", "distrito")
                        .WithMany()
                        .HasForeignKey("idDistrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("distrito");
                });

            modelBuilder.Entity("Core.Model.Personero", b =>
                {
                    b.HasOne("Core.Model.Mesa", "mesa")
                        .WithMany()
                        .HasForeignKey("idMesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mesa");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Core.Model.Provincia", b =>
                {
                    b.HasOne("Core.Model.Departamento", "departamento")
                        .WithMany()
                        .HasForeignKey("idDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departamento");
                });

            modelBuilder.Entity("Core.Model.Usuario", b =>
                {
                    b.HasOne("Core.Model.PartidoPolitico", "partidoPolitico")
                        .WithMany()
                        .HasForeignKey("idPartidoPolitico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("idPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.TipoUsuario", "tipoUsuario")
                        .WithMany()
                        .HasForeignKey("idTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("partidoPolitico");

                    b.Navigation("persona");

                    b.Navigation("tipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
